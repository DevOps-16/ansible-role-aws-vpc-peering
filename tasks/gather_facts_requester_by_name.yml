---

- name: combine vpc filter
  set_fact:
    _aws_vpc_peering_vpc_req_filter: |
      {{
        aws_vpc_peering_vpc_filter_additional + [{
          'key': 'tag:Name',
          'val': peering.req_name
        }]
      }}

- name: gather peering request facts
  ec2_vpc_net_facts:
    aws_access_key: "{{ lookup('ENV', 'AWS_ACCESS_KEY') | default(omit) }}"
    aws_secret_key: "{{ lookup('ENV', 'AWS_SECRET_KEY') | default(omit)  }}"
    security_token: "{{ lookup('ENV', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    profile: "{{ aws_vpc_peering_profile | default(omit) }}"
    region: "{{ peering.region | default(aws_vpc_peering_default_region) }}"
    filters: "{{ _aws_vpc_peering_vpc_req_filter | get_attr('key', 'val') }}"
  register: _aws_vpc_peering_requester_facts

- name: fail if vpc was not found
  assert:
    that:
      - _aws_vpc_peering_requester_facts.vpcs is defined
      - _aws_vpc_peering_requester_facts.vpcs | length == 1
    msg: Not exactly one VPC has been found

- name: set peering requester vpc-id
  set_fact:
    aws_vpc_peering_requester_id: "{{ _aws_vpc_peering_requester_facts.vpcs[0].id }}"
    aws_vpc_peering_requester_name: "{{ _aws_vpc_peering_requester_facts.vpcs[0].tags.Name }}"
